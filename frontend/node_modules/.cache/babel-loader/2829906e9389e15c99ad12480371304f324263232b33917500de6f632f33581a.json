{"ast":null,"code":"var _jsxFileName = \"D:\\\\Labour-Management\\\\app\\\\frontend\\\\src\\\\components\\\\AppointmentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './AppointmentPage.css'; // Import your CSS file for styling\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppointmentPage = () => {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const today = new Date();\n\n  // Disable dates before today\n  const tileDisabled = ({\n    date\n  }) => date < today;\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    contactNo: '',\n    date: '',\n    slot: ''\n  });\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [error, setError] = useState('');\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleDateChange = async e => {\n    const selectedDate = e.target.value;\n    setSelectedDate(selectedDate);\n    setFormData({\n      ...formData,\n      date: selectedDate\n    });\n    try {\n      const response = await axios.get(`http://localhost:5000/api/slots?date=${selectedDate}`);\n      if (response.data.slots) {\n        setAvailableSlots(response.data.slots);\n        setError('');\n      } else {\n        setAvailableSlots([]);\n        setError('No slots available for the selected date.');\n      }\n    } catch (error) {\n      console.error('Error fetching slots:', error);\n      setError('Failed to fetch available slots.');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/api/appointments', formData);\n      alert('Appointment booked successfully!');\n      setFormData({\n        name: '',\n        email: '',\n        contactNo: '',\n        date: '',\n        slot: ''\n      });\n      setAvailableSlots([]);\n    } catch (error) {\n      console.error('Error booking appointment:', error);\n      alert('Failed to book appointment.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appointment-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Book an Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"contactNo\",\n        children: \"Contact Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"contactNo\",\n        name: \"contactNo\",\n        value: formData.contactNo,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Select Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"date\",\n        name: \"date\",\n        value: formData.date,\n        onChange: handleDateChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"slot\",\n        children: \"Select Time Slot:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"slot\",\n        name: \"slot\",\n        value: formData.slot,\n        onChange: handleChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a slot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), availableSlots.length > 0 ? availableSlots.map(slot => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: slot,\n          children: slot\n        }, slot, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"No available slots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Book Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(AppointmentPage, \"oUDcVbtfDFOEQcz0fo8LpES/24Y=\");\n_c = AppointmentPage;\nexport default AppointmentPage;\nvar _c;\n$RefreshReg$(_c, \"AppointmentPage\");","map":{"version":3,"names":["React","useState","axios","Calendar","jsxDEV","_jsxDEV","AppointmentPage","_s","date","setDate","Date","today","tileDisabled","formData","setFormData","name","email","contactNo","slot","availableSlots","setAvailableSlots","selectedDate","setSelectedDate","error","setError","handleChange","e","target","value","handleDateChange","response","get","data","slots","console","handleSubmit","preventDefault","post","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","length","map","_c","$RefreshReg$"],"sources":["D:/Labour-Management/app/frontend/src/components/AppointmentPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './AppointmentPage.css'; // Import your CSS file for styling\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nconst AppointmentPage = () => {\r\n    const [date, setDate] = useState(new Date());\r\n  const today = new Date();\r\n\r\n  // Disable dates before today\r\n  const tileDisabled = ({ date }) => date < today;\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        contactNo: '',\r\n        date: '',\r\n        slot: ''\r\n    });\r\n\r\n    const [availableSlots, setAvailableSlots] = useState([]);\r\n    const [selectedDate, setSelectedDate] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleDateChange = async (e) => {\r\n        const selectedDate = e.target.value;\r\n        setSelectedDate(selectedDate);\r\n        setFormData({\r\n            ...formData,\r\n            date: selectedDate\r\n        });\r\n\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/api/slots?date=${selectedDate}`);\r\n            if (response.data.slots) {\r\n                setAvailableSlots(response.data.slots);\r\n                setError('');\r\n            } else {\r\n                setAvailableSlots([]);\r\n                setError('No slots available for the selected date.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching slots:', error);\r\n            setError('Failed to fetch available slots.');\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/appointments', formData);\r\n            alert('Appointment booked successfully!');\r\n            setFormData({\r\n                name: '',\r\n                email: '',\r\n                contactNo: '',\r\n                date: '',\r\n                slot: ''\r\n            });\r\n            setAvailableSlots([]);\r\n        } catch (error) {\r\n            console.error('Error booking appointment:', error);\r\n            alert('Failed to book appointment.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"appointment-page\">\r\n            <h1>Book an Appointment</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"name\">Name:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    value={formData.name}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n\r\n                <label htmlFor=\"email\">Email:</label>\r\n                <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={formData.email}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n\r\n                <label htmlFor=\"contactNo\">Contact Number:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"contactNo\"\r\n                    name=\"contactNo\"\r\n                    value={formData.contactNo}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n\r\n                <label htmlFor=\"date\">Select Date:</label>\r\n                <input\r\n                    type=\"date\"\r\n                    id=\"date\"\r\n                    name=\"date\"\r\n                    value={formData.date}\r\n                    onChange={handleDateChange}\r\n                    required\r\n                />\r\n\r\n                <label htmlFor=\"slot\">Select Time Slot:</label>\r\n                <select\r\n                    id=\"slot\"\r\n                    name=\"slot\"\r\n                    value={formData.slot}\r\n                    onChange={handleChange}\r\n                    required\r\n                >\r\n                    <option value=\"\">Select a slot</option>\r\n                    {availableSlots.length > 0 ? (\r\n                        availableSlots.map((slot) => (\r\n                            <option key={slot} value={slot}>{slot}</option>\r\n                        ))\r\n                    ) : (\r\n                        <option value=\"\">No available slots</option>\r\n                    )}\r\n                </select>\r\n\r\n                {error && <p className=\"error\">{error}</p>}\r\n\r\n                <button type=\"submit\">Book Appointment</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppointmentPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}