{"ast":null,"code":"var _jsxFileName = \"D:\\\\Labour-Management\\\\app\\\\frontend\\\\src\\\\components\\\\Appointments.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport axios from 'axios';\nimport './AppointmentPage.css';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nconst AppointmentPage = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  useEffect(() => {\n    fetchAppointments();\n  }, []);\n  const fetchAppointments = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/appointments');\n      const appointments = response.data.map(appointment => ({\n        title: 'Booked',\n        start: new Date(appointment.date),\n        end: new Date(appointment.date),\n        allDay: false\n      }));\n      setEvents(appointments);\n    } catch (error) {\n      console.error('Error fetching appointments:', error);\n    }\n  };\n  const handleSelectSlot = ({\n    start,\n    end\n  }) => {\n    const isSlotBooked = events.some(event => start >= event.start && start < event.end || end > event.start && end <= event.end);\n    if (isSlotBooked) {\n      toast.error('This slot is already booked. Please choose another one.', {\n        position: 'top-right',\n        autoClose: 5000\n      });\n    } else {\n      setSelectedSlot({\n        start,\n        end\n      });\n    }\n  };\n  const handleSubmit = async () => {\n    if (!selectedSlot) return;\n    const name = prompt(\"Enter your name:\");\n    const email = prompt(\"Enter your email:\");\n    if (name && email) {\n      try {\n        const response = await axios.post('http://localhost:5000/api/appointments', {\n          name,\n          email,\n          date: selectedSlot.start\n        });\n        if (response.data) {\n          toast.success('Appointment booked successfully!', {\n            position: 'top-right',\n            autoClose: 5000\n          });\n          fetchAppointments();\n          setSelectedSlot(null);\n        }\n      } catch (error) {\n        console.error('Error booking appointment:', error);\n        toast.error('Failed to book appointment. Please try again later.', {\n          position: 'top-right',\n          autoClose: 5000\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appointment-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Book an Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      selectable: true,\n      onSelectSlot: handleSelectSlot,\n      defaultView: \"week\",\n      views: ['month', 'week', 'day'],\n      step: 30,\n      timeslots: 2,\n      style: {\n        height: 600\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), selectedSlot && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appointment-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selected Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Start: ${selectedSlot.start.toLocaleString()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `End: ${selectedSlot.end.toLocaleString()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"btn-primary\",\n        children: \"Confirm Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(AppointmentPage, \"rg0XWM00hw7cHsl6NtBd/fFxGmA=\");\n_c = AppointmentPage;\nexport default AppointmentPage;\nvar _c;\n$RefreshReg$(_c, \"AppointmentPage\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","momentLocalizer","moment","axios","toast","ToastContainer","jsxDEV","_jsxDEV","localizer","AppointmentPage","_s","events","setEvents","selectedSlot","setSelectedSlot","fetchAppointments","response","get","appointments","data","map","appointment","title","start","Date","date","end","allDay","error","console","handleSelectSlot","isSlotBooked","some","event","position","autoClose","handleSubmit","name","prompt","email","post","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selectable","onSelectSlot","defaultView","views","step","timeslots","style","height","toLocaleString","onClick","_c","$RefreshReg$"],"sources":["D:/Labour-Management/app/frontend/src/components/Appointments.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport axios from 'axios';\r\nimport './AppointmentPage.css';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst AppointmentPage = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const [selectedSlot, setSelectedSlot] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchAppointments();\r\n    }, []);\r\n\r\n    const fetchAppointments = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/api/appointments');\r\n            const appointments = response.data.map(appointment => ({\r\n                title: 'Booked',\r\n                start: new Date(appointment.date),\r\n                end: new Date(appointment.date),\r\n                allDay: false,\r\n            }));\r\n            setEvents(appointments);\r\n        } catch (error) {\r\n            console.error('Error fetching appointments:', error);\r\n        }\r\n    };\r\n\r\n    const handleSelectSlot = ({ start, end }) => {\r\n        const isSlotBooked = events.some(event =>\r\n            (start >= event.start && start < event.end) ||\r\n            (end > event.start && end <= event.end)\r\n        );\r\n\r\n        if (isSlotBooked) {\r\n            toast.error('This slot is already booked. Please choose another one.', {\r\n                position: 'top-right',\r\n                autoClose: 5000,\r\n            });\r\n        } else {\r\n            setSelectedSlot({ start, end });\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        if (!selectedSlot) return;\r\n\r\n        const name = prompt(\"Enter your name:\");\r\n        const email = prompt(\"Enter your email:\");\r\n\r\n        if (name && email) {\r\n            try {\r\n                const response = await axios.post('http://localhost:5000/api/appointments', {\r\n                    name,\r\n                    email,\r\n                    date: selectedSlot.start,\r\n                });\r\n                if (response.data) {\r\n                    toast.success('Appointment booked successfully!', {\r\n                        position: 'top-right',\r\n                        autoClose: 5000,\r\n                    });\r\n                    fetchAppointments();\r\n                    setSelectedSlot(null);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error booking appointment:', error);\r\n                toast.error('Failed to book appointment. Please try again later.', {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"appointment-page\">\r\n            <h1>Book an Appointment</h1>\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                selectable\r\n                onSelectSlot={handleSelectSlot}\r\n                defaultView=\"week\"\r\n                views={['month', 'week', 'day']}\r\n                step={30}\r\n                timeslots={2}\r\n                style={{ height: 600 }}\r\n            />\r\n            {selectedSlot && (\r\n                <div className=\"appointment-details\">\r\n                    <h2>Selected Slot</h2>\r\n                    <p>{`Start: ${selectedSlot.start.toLocaleString()}`}</p>\r\n                    <p>{`End: ${selectedSlot.end.toLocaleString()}`}</p>\r\n                    <button onClick={handleSubmit} className=\"btn-primary\">Confirm Appointment</button>\r\n                </div>\r\n            )}\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppointmentPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}